{% set flavor_name = flavor_name or "small" %}
{% set availability_zone = availability_zone or "az1" %}
---
    NeutronNetworks.create_and_delete_networks:
      -
        args:
          network_create_args: {}
        runner:
          type: "constant"
          times: 100
          concurrency: 10
        context:
          users:
            tenants: 3
            users_per_tenant: 3
          quotas:
            neutron:
              network: -1
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  
    VMTasks.dd_load_test:
      -
        args:
          flavor:
            name: "small"
          image:
            name: "ubuntu22"
          username: "ubuntu"  # Nome utente predefinito per Ubuntu
          floating_network: "fake_224"
        runner:
          type: "constant"
          times: 5
          concurrency: 2
        context:
          users:
            tenants: 3
            users_per_tenant: 2
          network:
            start_cidr: "10.1.0.0/24"
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
            
  
    Authenticate.keystone:
      -
        runner:
          type: "constant"
          times: 100
          concurrency: 5
        context:
          users:
            tenants: 3
            users_per_tenant: 50
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  
  
    Authenticate.validate_cinder:
      -
        args:
          repetitions: 2
        runner:
          type: "constant"
          times: 10
          concurrency: 5
        context:
          users:
            tenants: 3
            users_per_tenant: 5
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  
    Authenticate.validate_glance:
      -
        args:
          repetitions: 2
        runner:
          type: "constant"
          times: 10
          concurrency: 5
        context:
          users:
            tenants: 3
            users_per_tenant: 5
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  
    Authenticate.validate_neutron:
      -
        args:
          repetitions: 2
        runner:
          type: "constant"
          times: 10
          concurrency: 5
        context:
          users:
            tenants: 3
            users_per_tenant: 5
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  
    CinderQos.create_qos_associate_and_disassociate_type:
      -
        args:
          consumer: "both"
          write_iops_sec: "10"
          read_iops_sec: "1000"
        runner:
          type: "constant"
          times: 5
          concurrency: 2
        context:
          users:
            tenants: 2
            users_per_tenant: 2
          volume_types: [
            "test_type1",
            "test_type2",
            "test_type3",
            "test_type4",
            "test_type5",
          ]
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  
    CinderVolumes.create_and_accept_transfer:
      -
        args:
          size: 1
        runner:
          type: "constant"
          times: 3
          concurrency: 2
        context:
          users:
            tenants: 2
            users_per_tenant: 2
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
---
    CinderVolumes.create_volume:
      -
        args:
          size: 1
        runner:
          type: "constant"
          times: 3
          concurrency: 2
        context:
          users:
            tenants: 2
            users_per_tenant: 2
        sla:
          failure_rate:
            max: 0
      -
        args:
          size:
            min: 1
            max: 5
        runner:
          type: "constant"
          times: 3
          concurrency: 2
        context:
          users:
            tenants: 2
            users_per_tenant: 2
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
---
    CinderVolumes.create_and_attach_volume:
      -
        args:
            size: 10
            image:
              name: "^cirros$"
            flavor:
              name: "{{flavor_name}}"
            create_volume_params:
              availability_zone: "{{availability_zone}}"
        runner:
          type: "constant"
          times: 5
          concurrency: 1
        context:
          users:
            tenants: 2
            users_per_tenant: 2
          network:
            start_cidr: "10.2.0.0/24"
        sla:
          failure_rate:
            max: 0
      -
        args:
          size:
            min: 1
            max: 5
          flavor:
              name: "{{flavor_name}}"
          image:
              name: "^cirros$"
          create_volume_params:
              availability_zone: "{{availability_zone}}"
        runner:
          type: "constant"
          times: 5
          concurrency: 1
        context:
          users:
            tenants: 2
            users_per_tenant: 2
          network:
            start_cidr: "10.2.0.0/24"
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  
    CinderVolumes.create_and_delete_snapshot:
      -
        args:
            force: false
        runner:
          type: "constant"
          times: 3
          concurrency: 2
        context:
          users:
            tenants: 2
            users_per_tenant: 2
          volumes:
            size: 1
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  
    CinderVolumes.create_and_delete_volume:
      -
        args:
          size: 1
        runner:
          type: "constant"
          times: 3
          concurrency: 2
        context:
          users:
            tenants: 2
            users_per_tenant: 2
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
      -
        args:
          size:
            min: 1
            max: 5
        runner:
          type: "constant"
          times: 3
          concurrency: 2
        context:
          users:
            tenants: 2
            users_per_tenant: 2
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  
    CinderVolumes.create_and_extend_volume:
      -
        args:
          size: 1
          new_size: 2
        runner:
          type: "constant"
          times: 2
          concurrency: 2
        context:
          users:
            tenants: 1
            users_per_tenant: 1
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
      -
        args:
          size:
            min: 1
            max: 5
          new_size:
            min: 6
            max: 10
        runner:
          type: "constant"
          times: 2
          concurrency: 2
        context:
          users:
            tenants: 1
            users_per_tenant: 1
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
            
  
    CinderVolumes.create_and_upload_volume_to_image:
      -
        args:
          size: 1
          force: false
          container_format: "bare"
          disk_format: "raw"
          do_delete: true
          image:
            name: "^cirros$"
        runner:
          type: "constant"
          times: 3
          concurrency: 2
        context:
          users:
            tenants: 2
            users_per_tenant: 2
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
      -
        args:
          size:
            min: 1
            max: 5
          force: false
          container_format: "bare"
          disk_format: "raw"
          do_delete: true
          image:
            name: "^cirros$"
        runner:
          type: "constant"
          times: 3
          concurrency: 2
        context:
          users:
            tenants: 2
            users_per_tenant: 2
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  
    CinderVolumes.create_from_volume_and_delete_volume:
      -
        args:
          size: 1
        runner:
          type: "constant"
          times: 2
          concurrency: 2
        context:
          users:
            tenants: 1
            users_per_tenant: 1
          volumes:
            size: 1
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
      -
        args:
          size:
            min: 1
            max: 5
        runner:
          type: "constant"
          times: 2
          concurrency: 2
        context:
          users:
            tenants: 1
            users_per_tenant: 1
          volumes:
            size: 1
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
  

  
    GlanceImages.create_image_and_boot_instances:
      -
        args:
          image_location: "http://download.cirros-cloud.net/0.5.2/cirros-0.5.2-x86_64-disk.img"
          container_format: "bare"
          disk_format: "qcow2"
          flavor:
              name: "{{flavor_name}}"
          number_instances: 2
          boot_server_kwargs:
            nics:
              - net-id: "1fb55fc1-0697-4fde-a392-059495080760"
        runner:
          type: "constant"
          times: 10
          concurrency: 2
        context:
          users:
            tenants: 3
            users_per_tenant: 2
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
      
    title: CinderVolumes.create_and_update_volume tests
    workloads:
      -
        scenario:
          CinderVolumes.create_and_update_volume:
            update_volume_kwargs:
              description: "desc_updated"
            size: 1
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
            users_per_tenant: 2
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
      -
        description: "Create volume from image and update it."
        scenario:
          CinderVolumes.create_and_update_volume:
            update_volume_kwargs:
              description: "desc_updated"
            size: 1
            image:
              name: {{image_name}}
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
            users_per_tenant: 2
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0


    title: CinderVolumes.create_and_list_volume tests
    workloads:
      -
        scenario:
          CinderVolumes.create_and_list_volume:
            size: 1
            detailed: True
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 1
            users_per_tenant: 1
        sla:
          max_seconds_per_iteration: 200.0
          max_avg_duration: 100.0
          outliers:
            max: 1
            min_iterations: 10
            sigmas: 10
          failure_rate:
            max: 0
      -
        scenario:
          CinderVolumes.create_and_list_volume:
            size:
              min: 1
              max: 2
            detailed: True
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 1
            users_per_tenant: 1

    description: "Create volume from image and list volumes."
    scenario:
      CinderVolumes.create_and_list_volume:
        size: 1
        detailed: True
        image:
          name: {{image_name}}
    runner:
      constant:
        times: 2
        concurrency: 2
    contexts:
      users:
        tenants: 1
        users_per_tenant: 1
    sla:
      max_seconds_per_iteration: 200.0
      max_avg_duration: 100.0
      outliers:
        max: 1
        min_iterations: 10
        sigmas: 10
      failure_rate:
        max: 0

    title: CinderVolumes.create_and_get_volume tests
    workloads:
      -
        scenario:
          CinderVolumes.create_and_get_volume:
            size: 1
        runner:
          constant:
            times: 4
            concurrency: 2
        contexts:
          users:
            tenants: 2
            users_per_tenant: 2
      -
        scenario:
          CinderVolumes.create_and_get_volume:
            size:
              min: 1
              max: 2
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
            users_per_tenant: 2
      -
        description: "Create volume from image and get it."
        scenario:
          CinderVolumes.create_and_get_volume:
            size: 1
            image:
              name: {{image_name}}
        runner:
          constant:
            times: 4
            concurrency: 2
        contexts:
          users:
            tenants: 2
            users_per_tenant: 2